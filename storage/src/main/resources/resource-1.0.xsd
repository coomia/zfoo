<?xml version="1.0" encoding="UTF-8" standalone="no" ?>

<!--xsd文件本身是xml文件，第一行是xml声明-->
<!-- 第一行必须要，
        version属性指定版本，
        encoding属性编码格式，
        standalone属性,如果是yes，则表示这个XML文档是独立的，不能引用外部的DTD规范文件；如果是no，则该XML文档不是独立的，表示可以用外部的DTD规范文档
        XML的属性值须加引号 -->

<!--**************************************分割线**************************************************-->

<!--第一个xmlns表示schema中用到的元素和数据类型来自命名空间"http://www.w3.org/2001/XMLSchema"。
        同时它还规定了来自命名空间 "http://www.w3.org/2001/XMLSchema" 的元素和数据类型应该使用前缀 xsd，可以为任何自定义名称：-->

<!--第二个xmlns表示引用spring中beans的命名空间-->

<!--xmlns="http://www.zfoo.com/schema/user" ,指出默认的命名空间是 "http://www.zfoo.com/schema/user" -->
<!--targetNamespace显示被此 schema 定义的元素 (note, to, from, heading, body) 来自命名空间：
        http://www.zfoo.com/schema/user -->

<!--elementFormDefault指出任何 XML 实例文档所使用的且在此 schema 中声明过的元素必须被命名空间限定。 -->
<!--attributeFormDefault属性:
        指定XML文档使用schema中定义的局部属性时是否必须使用命名空间限定
        qualified:必须通过命名空间前缀限定unqualified：（默认值）无须通过命名空间前缀限定 -->

<!--**************************************分割线**************************************************-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:beans="http://www.springframework.org/schema/beans"

            xmlns="http://www.zfoo.com/schema/resource"
            targetNamespace="http://www.zfoo.com/schema/resource"

            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.springframework.org/schema/beans"/>

    <!-- 文档注释，可忽略，也可以用这行代码表示-->
    <xsd:annotation>
        <xsd:documentation>
            <![CDATA[
            术语 CDATA 指的是不应由 XML 解析器进行解析的文本数据（Unparsed Character Data）。
            This defines a simple and consistent way of creating a namespace of JavaBeans objects.
            Each "bean" element in this document defines a JavaBean
            ]]>
        </xsd:documentation>
    </xsd:annotation>

    <!-- scan扫描包类型 -->
    <!-- package声明类型 -->
    <xsd:complexType name="scan">
        <xsd:attribute name="package" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- 格式声明类型 -->
    <xsd:complexType name="resource">
        <!-- 本地资源路径 -->
        <xsd:attribute name="location" type="xsd:string" use="required"/>
        <!-- 资源文件后缀 -->
        <xsd:attribute name="suffix" type="xsd:string" use="required"/>
    </xsd:complexType>

    <!-- 表示定义标签 -->
    <xsd:element name="storage">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="scan" type="scan"/>
                <xsd:element name="resource" type="resource"/>
            </xsd:sequence>
            <xsd:attribute name="id" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>


    <!--**************************************分割线**************************************************-->
    <!--  Top-level <beans> tag  -->
    <!--  所有自定义bean的默认值，必须要写在其它bean的最上面  -->


    <!-- 表示定义标签 -->
    <xsd:element name="user">
        <xsd:complexType>
            <xsd:complexContent>
                <!-- 继承定义 从namespace="http://www.springframework.org/schema/beans" -->

                <!-- 定义简易元素定义简易元素的语法：<xs:element name="xxx" type="yyy"/>
                此处 xxx 指元素的名称，yyy 指元素的数据类型。XML Schema 拥有很多内建的数据类型。
                最常用的类型是：xsd:string,xsd:decimal,xsd:integer,xsd:boolean,xsd:date,xsd:time -->

                <xsd:extension base="beans:identifiedType">
                    <!-- 当没有其他的值被规定时，默认值就会自动分配给元素。 -->
                    <xsd:attribute name="key" type="xsd:string" default="孙来疯">
                        <xsd:annotation>
                            <xsd:documentation>姓名</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <!-- 在缺省的情况下，属性是可选的。如需规定属性为必选，请使用 "use" 属性。 -->
                    <xsd:attribute name="sex" type="xsd:string" use="required">
                        <xsd:annotation>
                            <xsd:documentation>性别</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <!-- 固定值同样会自动分配给元素，并且您无法规定另外的值。 -->
                    <xsd:attribute name="age" type="xsd:int" fixed="20">
                        <xsd:annotation>
                            <xsd:documentation>年龄</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>


</xsd:schema>